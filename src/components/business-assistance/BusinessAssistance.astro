---
import type { CardForCasesProps } from "src/components/card-for-cases/CardForCases.astro";
import CardForCases from "src/components/card-for-cases/CardForCases.astro";
import HorizontalLineTitle from "src/components/horizontal-line-title/HorizontalLineTitle.astro";
import Modal from "src/components/card-for-cases/modal/Modal.astro";
import ModalContent from "src/components/card-for-cases/modal-content/ModalContent.astro";
import "src/components/business-assistance/BusinessAssistance.less";
import card1 from "src/assets/images/devops-case-1.svg";
import card2 from "src/assets/images/devops-case-2.png";
import card3 from "src/assets/images/devops-case-3.svg";

type AssistanceWithModal = CardForCasesProps & {
    modalData?: {
        image?: ImageMetadata;
        title: string;
        taskTitle: string;
        task?: string;
        implementation: string;
        results: string;
        team?: string;
        duration?: string;
        moneyEffect?: string;
    };
};

const assistances: AssistanceWithModal[] = [
    {
        image: card1,
        title: "DEVOPS",
        subtitle: "КЕЙС",
        descriptions: {
            firstPart:
                "<strong>Корректные изменения</strong> в коде будут в пару кликов отражены в продукте без простоя.",
            secondPart:
                "<strong>Ошибки</strong> не пройдут через систему автоматических тестов.",
        },
        modalData: {
            title: "NDA",
            taskTitle:
                "миграция стендов с docker-compose и одной VM на AWS инфраструктуру в связи с добавлением прод окружений:",
            task: `
                <li>настроить отказоустойчивость, zero-time downtime update</li>
                <li>настроить бекапы файлов и базы данных</li>
                <li>использовать IaC подход</li>
                <li>настроить контроль доступов к стендам</li>
            `,
            implementation: `
                <li>написали терраформ манифесты для инфраструктуры aws</li>
                <li>вынесли все различия между окружениями в переменные, обеспечив переиспользование манифестов</li>
                <li>написали CI/CD для применения изменений в AWS окружении</li>
                <li>настроили непрерывный цикл CI/CD от коммита изменений в приложении до попадания изменений на прод</li>
                <li>обеспечили observability всей инфраструктуры с аудитом всех изменений и действий пользователя</li>
                <li>подготовили документацию по всему процессу</li>
            `,
            results: `
                <li>приложение обновляется незаметно для пользователя</li>
                <li>процесс максимально автоматизирован и может быть выполнен по документации даже новичком на проекте</li>
                <li>собираются метрики с приложения и отрабатывают алерты в случае обнаружения проблем</li>
                <li>вся инфраструктура хранится как код и легко масштабируется</li>
            `,
        },
    },
    {
        image: card2,
        title: "DEVOPS",
        subtitle: "КЕЙС",
        descriptions: {
            firstPart:
                "<strong>Системы</strong> сами балансировать нагрузку, находить неработающие элементы и обслуживать приложения.",
            secondPart:
                "<strong>Сервер</strong> не упадет от роста запросов — выдержит высокие нагрузки на Черную пятницу, IPO или промоакцию.",
        },
        modalData: {
            title: "NDA",
            taskTitle:
                "миграция dotnet приложения с Windows server в AWS EKS (kubernetes)",
            task: `
                <li>перевести приложение с windows на linux</li>
                <li>настроить CI/CD</li>
                <li>использовать IaC подход</li>
                <li>обеспечить observability приложений</li>
            `,
            implementation: `
                <li>перевели работу приложения на dotnet for linux в docker образах</li>
                <li>написали kubernetes манифесты для развёртывания приложений</li>
                <li>настроили CI/CD</li>
                <li>написали terraform манифесты</li>
                <li>настроили observability</li>
            `,
            results: `
                <li>повышена стабильность сборки приложений за счёт внедрения CI/CD</li>
                <li>вся инфраструктура хранится как код и легко масштабируется</li>
                <li>собираются метрики/логи с приложения и отрабатывают алерты в случае обнаружения проблем</li>
            `,
        },
    },
    {
        image: card3,
        title: "DEVOPS",
        subtitle: "КЕЙС",
        descriptions: {
            firstPart:
                "<strong>Системы</strong> мониторинга с оповещениями по любым каналам и в любое время.",
            secondPart:
                "<strong>Прием заявок</strong> по инцидентам через чат-боты в Telegram и Slack будет автоматическим.",
        },
        modalData: {
            title: "NDA",
            taskTitle:
                "настроить CI/CD для микросервисного банковского приложения с развёртыванием в kubernetes",
            task: `
                <li>настроить CI/CD</li>
                <li>обеспечить observability приложений</li>
            `,
            implementation: `
                <li>написали dockerfile с вынесением дублирования в базовые образы</li>
                <li>написали helm chart-ы для устранения дублирования в развёртывании однотипных приложений</li>
                <li>настроили CI/CD с момента коммита до попадания приложений на всех контуры (dev, test, preprod, prod)</li>
                <li>настроили CD сторонних компонентов для всех контуров </li>
                <li>настроили observability для всех компонентов приложений</li>
            `,
            results: `
                <li>обеспечен CI/CD для всех компонентов инфраструктуры</li>
                <li>сбор логов и метрик со всех компонентов системы с отправкой алертов в случае обнаружения проблем</li>
            `,
        },
    },
];
---

<HorizontalLineTitle
    title="КАК МЫ ПОМОГЛИ БИЗНЕСУ"
    className="assistances"
    contentClassName="assistances-content"
>
    {
        assistances.map((assistance) => (
            <CardForCases
                image={assistance.image}
                title={assistance.title}
                subtitle={assistance.subtitle}
                descriptions={assistance.descriptions || {}}
            >
                {assistance.modalData && (
                    <div slot="modalContent">
                        <ModalContent
                            image={assistance.modalData.image}
                            title={assistance.modalData.title}
                            taskTitle={assistance.modalData.taskTitle}
                            task={assistance.modalData.task}
                            implementation={assistance.modalData.implementation}
                            results={assistance.modalData.results}
                            team={assistance.modalData.team}
                            duration={assistance.modalData.duration}
                            moneyEffect={assistance.modalData.moneyEffect}
                        />
                    </div>
                )}
            </CardForCases>
        ))
    }
</HorizontalLineTitle>

<Modal />
